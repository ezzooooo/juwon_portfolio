[
  {
    "title": "세븐미어캣 사용자 앱",
    "titleEn": "7Meerkat User App",
    "slug": "7meerkat_user_app",
    "description": "1일 10만 이상의 입출차 트래픽이 발생하는 아파트 생활 플랫폼",
    "techStack": [
      "Flutter",
      "GetX",
      "Firebase",
      "Google Analytics",
      "Laravel",
      "MariaDB"
    ],
    "period": "2020.07 - 2022. 11",
    "open": true,
    "operating": true,
    "techParticipants": {
      "풀스택": "2명(본인 포함)",
      "디자이너": "1명"
    },
    "links": {
      "repo": "",
      "demo": ""
    },
    "thumbnail": "assets/images/7meerkat.png",
    "screens": [
      "assets/images/projects/7meerkat_user_app/001.jpg",
      "assets/images/projects/7meerkat_user_app/002.jpg",
      "assets/images/projects/7meerkat_user_app/003.jpg",
      "assets/images/projects/7meerkat_user_app/004.jpg",
      "assets/images/projects/7meerkat_user_app/005.jpg",
      "assets/images/projects/7meerkat_user_app/006.jpg",
      "assets/images/projects/7meerkat_user_app/007.jpg",
      "assets/images/projects/7meerkat_user_app/008.jpg",
      "assets/images/projects/7meerkat_user_app/009.jpg"
    ],
    "overview": "아파트·빌딩·사용자·자동차를 연결하는 생활 플랫폼입니다. 차량이 가장 오래 머무는 주차장을 중심으로 시작해 입출차 관리/기록 조회, 방문자 사전등록을 통한 무인 차단기 개방을 지원합니다. 이후 단지 대상 커머스(세븐미어캣 샵)와 상가 유료주차장 연동(주차할인권)까지 확장했습니다.",
    "achievements": [
      "입출차 관리 전 과정 앱화: 단지 게이트/관제 연동, 기록 조회 UX 설계",
      "방문자 사전등록으로 무인 통과 구현, 경비실 대면 절차 최소화",
      "단지 대상 커머스 ‘세븐미어캣 샵’ 오픈, 첫 커머스 매출 창출(앱·백엔드 단독 개발)",
      "상가 유료주차장 연동 및 주차할인권 서비스 론칭(앱·백엔드 단독 개발)",
      "대용량 이력 뷰 성능 최적화: ListView.builder 적용으로 메모리 사용 억제"
    ],
    "improvements": [
      "GetX 심화 활용(특히 GetBinding) 및 의존성 주입 체계 개선",
      "화면별 상태 분리 및 작은 단위 리빌드로 전체 리빌드 감소",
      "입출차 이력 페이징/캐시 전략 고도화(기간 필터, 무한 스크롤, 오프라인 캐시)",
      "방문자/차단기 이벤트 로깅 표준화 및 모니터링 대시보드 확장"
    ]
  },
  {
    "title": "세븐미어캣 입출차 모니터링 Windows 앱",
    "titleEn": "7Meerkat Entry/Exit Monitoring (Windows)",
    "slug": "7meerkat_entry_exit_monitoring_windows",
    "description": "현장 CS 분석·설치 지원을 위한 내부용 Windows 앱(미인식/오인식 사진 분류, 실시간 재인식 검증, 카메라 세팅 점검)",
    "techStack": [
      "Flutter",
      "GetX",
      "FFI",
      "C",
      "Laravel"
    ],
    "period": "2022.07 - 2022.09",
    "open": false,
    "operating": false,
    "techParticipants": {
      "풀스택": "1명(본인)"
    },
    "links": {
      "repo": "",
      "demo": ""
    },
    "thumbnail": "assets/images/7meerkat.png",
    "overview": "세븐미어캣 주차관제 시스템 도입 이후, 현장에서 발생하는 미인식/오인식 사례를 빠르게 분석하고 카메라 설치 품질을 점검하기 위해 제작된 내부용 Windows 프로그램입니다. 미들웨어 서버와 동일한 번호인식 C DLL을 FFI로 호출해 현장 촬영 이미지를 즉시 재인식해 봄으로써 문제 원인이 촬영 품질인지, 엔진 학습 필요인지 신속히 판별할 수 있습니다. 신규 현장 설치 시 4방향 카메라(앞·위·옆·뒤)의 각도·프레이밍 검수에도 사용됩니다.",
    "achievements": [
      "미인식/오인식 사진 분류 및 현장별/차단기별 이슈 트러블슈팅 워크플로우 구축",
      "번호인식 엔진(C DLL)과 동일 환경 FFI 연동으로 재현성 높은 실시간 재인식 검증",
      "카메라 4방향 세팅 지원(프레이밍/각도 점검)으로 설치 품질 향상 및 재방문 감소",
      "CS 대응 속도 개선: 원격으로도 이미지 확인·재인식 검증 가능"
    ],
    "improvements": [
      "일괄 재인식 배치·리포트 내보내기(CSV/이미지 번들) 지원",
      "엔진 버전별 A/B 재인식 비교와 통계(정확도/재현율) 시각화"
    ]
  },
  {
    "title": "세븐미어캣 주차관제 시스템",
    "titleEn": "7Meerkat Parking Management System",
    "slug": "7meerkat_parking_management_system",
    "description": "아파트/상가 주차장 차단기 관제 솔루션(번호인식·신호처리·로그·API 연동)",
    "techStack": [
      "Python",
      "FastAPI",
      "Raspberry Pi",
      "PyQt",
      "Laravel"
    ],
    "period": "2021.12 - 2022.06",
    "open": true,
    "operating": true,
    "techParticipants": {
      "하드웨어·백엔드": "1명(본인)",
      "웹·백엔드": "1명",
      "하드웨어": "1명"
    },
    "links": {
      "repo": "",
      "demo": ""
    },
    "thumbnail": "assets/images/7meerkat.png",
    "overview": "시즌1(Python Flask + PyQt, 직원1)에서 낮은 번호인식률 문제를 확인했고, 시즌2(C#, 단일 프로그램, 직원2)에서는 모든 기능을 하나의 프로세스에 통합하여 안정성·확장성의 한계가 있었습니다. 시즌3에서는 미들웨어 서버와 엣지 디바이스(Raspberry Pi)로 역할을 분리하여 시스템 안정성과 비용 효율을 동시에 개선했습니다.",
    "achievements": [
      "아키텍처 분리: Python(FastAPI) 미들웨어 서버(번호인식, 서버 API 연동, API 로그) + Raspberry Pi Python(접점신호/시리얼 통신, 신호 로그)로 역할 분리",
      "비용 절감: 현장 4차단기 기준 고사양 Windows PC 4대 → Raspberry Pi 4대 + PC 1대로 전환, 생산 단가 30%+ 절감",
      "안정성 향상: 하드웨어 분리로 메모리 부족에 의한 프로세스 멈춤 90%+ 감소",
      "정확도/신뢰도 개선: 차량 진입 신호 중복 호출 문제 완전 해소",
      "운영 지표 개선: 차단기 관련 CS 접수 50%+ 감소",
      "배포 효율화: 신규 현장 설치 간소화(Windows 프로그램 USB 이미지, Raspberry Pi SD 카드 이미지로 즉시 부팅/운영)"
    ],
    "improvements": [
      "원격 모니터링 대시보드 고도화(라즈베리파이 상태/신호/카메라/번호인식 실시간 헬스체크)",
      "로그 중앙화로 원인 분석 시간 단축",
      "라즈베리파이 OTA 업데이트/롤백 파이프라인 구축",
      "중앙 서버 장애 대비 로컬 폴백/버퍼링 전략 강화(네트워크 단절 시 안전동작 보장)"
    ]
  },
  {
    "title": "달채비",
    "titleEn": "Dalchaebi",
    "slug": "dalchaebi",
    "description": "여성의 월경 경험을 데이터와 UX로 개선하는 앱으로, AI 기반 월경주기 분석·예측, 기록 기반 월경 리포트, 루틴 관리, 유료 심리검사(인앱결제)를 제공하며 커스텀 차트로 직관적인 건강 인사이트를 제시합니다.",
    "techStack": [
      "Flutter",
      "Riverpod",
      "Go Router",
      "In App Purchase",
      "AppsFlyer",
      "Amplitude",
      "Freezed",
      "Retrofit",
      "Dio"
    ],
    "period": "2023.06 - 2023.11",
    "open": true,
    "operating": false,
    "techParticipants": {
      "앱": "1명(본인)",
      "백엔드": "1명"
    },
    "links": {
      "repo": "",
      "demo": ""
    },
    "screens": [
      "assets/images/projects/dalchaebi/001.jpg",
      "assets/images/projects/dalchaebi/002.jpg",
      "assets/images/projects/dalchaebi/003.jpg",
      "assets/images/projects/dalchaebi/004.jpg",
      "assets/images/projects/dalchaebi/005.jpg",
      "assets/images/projects/dalchaebi/006.jpg",
      "assets/images/projects/dalchaebi/007.jpg",
      "assets/images/projects/dalchaebi/008.jpg"
    ],
    "thumbnail": "assets/images/dalchaebi.png",
    "overview": "여성의 일상에서 간과되기 쉬웠던 월경 경험을 데이터와 UX로 개선하는 앱입니다. 월경 주기를 AI로 분석·예측하고, 사용자의 기록을 바탕으로 리포트를 제공하며 루틴 관리와 유료 심리검사 기능을 통해 자기관리와 심리적 케어까지 지원합니다.",
    "achievements": [
      "월경 리포트 개발: 월경 정보·증상 기록 기반 맞춤 리포트 생성",
      "차트 컴포넌트 전면 커스텀: 막대/꺾은선/파이 그래프를 라이브러리 없이 디자인 시안과 1:1 구현",
      "루틴 관리 구현: table_calendar로 날짜 탐색, 알림·메모·완료 처리까지 한 화면 UX 설계",
      "유료 심리검사 플로우 구축: JSON 문항 스키마 → 설문 변환 → in_app_purchase 결제 → 결과 화면 애니메이션(챗봇형) 구성",
      "레이더(방사형) 차트 커스텀 구현: 결과지에서 핵심 지표를 한눈에 파악",
      "마케터 협업으로 Amplitude·AppsFlyer 연동, 주요 마케팅 지표 수집 지원"
    ],
    "improvements": [
      "루틴·리포트 오프라인 동기화 및 알림 신뢰성 고도화",
      "결제 복구/영수증 검증 강화, 환불·재결제 플로우 세분화"
    ]
  },
  {
    "title": "히어유알",
    "titleEn": "Here U R",
    "slug": "here_u_r",
    "description": "모임 일정 관리와 운영을 더 쉽게 해주는 앱. 1.0 iOS 배포 이슈 해결 및 레거시(GetX) 리팩토링 후 2.0에서 캘린더 기반 일정·위치 서비스를 제공하고 딥링크를 지원했습니다.",
    "techStack": [
      "Flutter",
      "Riverpod",
      "Go Router",
      "Freezed",
      "Retrofit",
      "Dio"
    ],
    "period": "2024.04 - 2024.11",
    "open": false,
    "operating": false,
    "techParticipants": {
      "앱": "1명(본인)",
      "백엔드": "1명"
    },
    "links": {
      "repo": "",
      "demo": ""
    },
    "thumbnail": "assets/images/here_u_r.jpg",
    "screens": [
      "assets/images/projects/here_u_r/001.jpg",
      "assets/images/projects/here_u_r/002.jpg",
      "assets/images/projects/here_u_r/003.jpg",
      "assets/images/projects/here_u_r/004.jpg",
      "assets/images/projects/here_u_r/005.jpg",
      "assets/images/projects/here_u_r/006.jpg",
      "assets/images/projects/here_u_r/007.jpg",
      "assets/images/projects/here_u_r/008.jpg",
      "assets/images/projects/here_u_r/009.jpg",
      "assets/images/projects/here_u_r/010.jpg",
      "assets/images/projects/here_u_r/011.jpg"
    ],
    "overview": "입사 당시 안드로이드만 배포된 1.0에서 iOS 배포 불가 이슈를 일주일 내 해결했습니다. 이후 누적된 QA를 백엔드와 함께 처리하던 중, GetX 기반 레거시 구조(초기 일괄 init, 컨트롤러에서 다이얼로그 호출, 비모델 파싱 등)로 유지보수성이 낮아 리팩토링을 추진했습니다. 약 1.5개월간 GetX → Riverpod 전환과 API 응답 제네릭 도입(코드·메시지 공통 + 데이터 모델 매핑)으로 안정성과 가독성을 개선했습니다. 2.0에서는 카드 기반 일정에서 캘린더 UI(table_calendar)로 전환하고, 위치 기반 맛집/장소 검색(Tmap API)과 이벤트 딥링크(선착순 경품)를 추가했습니다. 2.0 오픈 직후 서비스 종료되어 이후 개발은 진행하지 못했습니다.",
    "achievements": [
      "iOS 1.0 배포 이슈 해결(초기 세팅/서명/스토어 대응)",
      "아키텍처 리팩토링: GetX → Riverpod 전환, 컨트롤러 의존성 제거, 화면/상태 분리",
      "API 응답 제네릭 구조 도입으로 코드 일관성/가독성 향상",
      "레이어 분리(Repository/DTO/Entity) 정착",
      "일정 UX 개선: 카드 → 캘린더(table_calendar) 전환",
      "위치 기반 기능: Tmap 연동(맛집 제공, 장소 검색)",
      "딥링크 구현: 이벤트 URL → 앱 특정 화면 진입"
    ],
    "improvements": [
      "오프라인 캐시/재시도, 에러 매핑 일원화",
      "전환·성능 지표 계측과 A/B 실험 인프라"
    ]
  },
  {
    "title": "DID",
    "titleEn": "DID",
    "slug": "did",
    "description": "작성 예정",
    "techStack": [],
    "period": "",
    "open": false,
    "operating": false,
    "techParticipants": {},
    "links": {
      "repo": "",
      "demo": ""
    },
    "thumbnail": ""
  },
  {
    "title": "새폰내폰",
    "titleEn": "New Phone My Phone",
    "slug": "new_phone_my_phone",
    "description": "작성 예정",
    "techStack": [],
    "period": "",
    "open": false,
    "operating": false,
    "techParticipants": {},
    "links": {
      "repo": "",
      "demo": ""
    },
    "thumbnail": ""
  },
  {
    "title": "A-PASS",
    "titleEn": "A-PASS",
    "slug": "a_pass",
    "description": "작성 예정",
    "techStack": [],
    "period": "",
    "open": false,
    "operating": false,
    "techParticipants": {},
    "links": {
      "repo": "",
      "demo": ""
    },
    "thumbnail": ""
  },
  {
    "title": "프렌드 아카데미",
    "titleEn": "Friend Academy",
    "slug": "friend_academy",
    "description": "작성 예정",
    "techStack": [],
    "period": "",
    "open": false,
    "operating": false,
    "techParticipants": {},
    "links": {
      "repo": "",
      "demo": ""
    },
    "thumbnail": ""
  },
  {
    "title": "비공페이",
    "titleEn": "Bigong Pay",
    "slug": "bigong_pay",
    "description": "작성 예정",
    "techStack": [],
    "period": "",
    "open": false,
    "operating": false,
    "techParticipants": {},
    "links": {
      "repo": "",
      "demo": ""
    },
    "thumbnail": ""
  }
]